#include <stdio.h>
#include <time.h>
#include <stdlib.h>
#include <string.h>


int randNum(int lower, int upper);
void RPS(int regulator);
void tablePrinter(char playField[][3]);
void TTT(int regulator);

int main()
{
	
	char userName[20];
	int userScore = 0;
	char yes1 = 'a';
	char yes2 = 'a';

	// Main Code
	printf("\nWelcome to Collincity Typing School");
	printf("\nPlease Register to get Started!");

	printf("\n\nYour Username: ");
	fgets(userName, 40, stdin);

	mainTop:
	printf("\n\nWelcome %s", userName);
	printf("\n\nPress '1' to Take a lesson");
	printf("\nPress '2' to Play Games");
	printf("\nPress '0' to Exit");

	
	int choice1;
	firstQuestion:
	printf("\n\nMake a choice: ");
	scanf("%d", &choice1);


	if (choice1 == 1){
		printf("\nTry your best to type exactly what you see");
		printf("\nYour speed dosen't matter for the moment!");
		printf("\nTry avoiding as much errors as you can :)");
		printf("\n\nLets get started...");

		// char questionArray[8][50] = {"I am a boy", "I am a girl", "We are coming today", "How are you", "Where are you from", "Who is your best friend", "What is your best programming language", "Today is bright and fair", "The ceremony is about to begin", "Rivers are blue in color", "C is an old programming language", "Try learning PHP programming language", "Flutter is not bad when Kotlin is involved", "Nokia phones are quite exceptional", "Created by Okafor Chiagozie"};
		char questionArray[][30] = {"Expensive", "Necessary", "Unconditional", "Programming", "Educational", "University", "Consistency", "Successful", "Engineering", "Freelancing", "Nationalization", "Microsoft", "Preprocessor", "Development", "Globalization"};

		BackToLearning:
		while (yes1 == yes2)
		{
			int totalErrors = 0, totalExcesses = 0;
		
			for (int i = 0; i < 5; i++)
			{
				int rand1 = randNum(0, 14);
				char userAnswer[40];
				int wordLength = strlen(questionArray[rand1]);
				
				printf("\n\nTest %d:", i+1);
				printf("\n   %s", questionArray[rand1]);
				printf("\n=> ");
				scanf("%s", userAnswer);
				int answerLength = strlen(userAnswer);
				
				// Completes the length of the user input if it's not up to the given word length
				while (answerLength < wordLength){
					char filler[] = "..";
					strcat(userAnswer, filler);
					answerLength = strlen(userAnswer);
				}

				// Check for correctness of the user input
				int wordError = 0;
				for (int j = 0; j < wordLength; j++)
				{   
					char wordChar = questionArray[rand1][j];
					char answerChar = userAnswer[j];
					
					if(wordChar == answerChar){
						userScore++;
					}else{
						wordError++;
						totalErrors++;
					}
				}

				// Checks for excesses in the user input
				int wordExcesses = 0;
				if (wordLength < answerLength){
					wordExcesses += answerLength - wordLength;
					totalExcesses += answerLength - wordLength;
				}

				printf("\nErrors: %d     Excesses: %d", wordError, wordExcesses);
				
			}

			printf("\n\n|Current Score|          |Total Errors|          |Total Excesses|");
			printf("\n %d                       %d                       %d", userScore, totalErrors, totalExcesses);

			(userScore > 30) ? printf("\n\nQuite Impressive!") : printf("\nNot bad at all!");
			break;
		}

		int anotherRand = randNum(0,1);

		if (anotherRand == 0){
			printf("\n\nLet's have some fun with ROCK_PAPPER_SCISSORS\nAll work and no play makes Jack a dull boy!\n");
			RPS(0);
			printf("\nLet's get back to learning");
			goto BackToLearning;
		}else{
			printf("\n\nLet's have some fun with TIC_TAC_TOE\nAll work and no play makes Jack a dull boy!\n");
			TTT(0);
			printf("\nLet's get back to learning");
			goto BackToLearning;
		}


	}else if (choice1 == 2){
		printf("\n\nFeel like having fun?");
		printf("\nYou are at the right place!");

		printf("\n\nPress '1' for ROCK-PAPPER-SCISSORS");
		printf("\nPress '2' for TIC-TAC-TOE");

		int choice2;
		secondQuestion:
		printf("\n\nMake a choice: ");
		scanf("%d", &choice2);

		if (choice2 == 1){
			RPS(1);
			goto mainTop;
		}else if (choice2 == 2){
			TTT(1);
			goto mainTop;
		}else{
			goto secondQuestion;
		}


	}else if(choice1 == 0){
		printf("\n\nThanks for Coming!");
	}else{
		goto firstQuestion;
	}
	


	return (0);
}



// char* typingQuestions(int num){
// 	char questionArray[][80] = {"I am a boy", "I am a girl", "We are coming today", "How are you", "Where are you from", "Who is your best friend", "What is your best programming language", "Today is bright and fair", "The ceremony is about to begin", "Rivers are blue in color", "C is an old programming language", "Try learning PHP programming language", "Flutter is not bad when Kotlin is involved", "Nokia phones are quite exceptional", "Created by Okafor Chiagozie"};
// 	char* picked = questionArray[num];
// 	return picked;
// }

int randNum(int lower, int upper){
	int count = 1, i = 0, num;

	srand(time(0));

	for (i = 0; i < count; i++){
		num = (rand() % (upper - lower + 1) +  lower);
	}

	return num;
}

void RPS(int regulator){
	char computer[][10] = {"Rock", "Paper", "Scissors"};
	int counter = 0;
	int fail = 0, checker = 0;

	printf("\nYou can only input either 'Rock' or 'Paper' or 'Scissors' in the provided area");
	printf("\nLets get started...");


	// Game begins
	begin:
	if (regulator == 0){
		if (checker == 3){
			printf("\n\n You have failed three times");
			goto stop;
		}
	}else if (regulator == 1){
		if (checker == 3){
			printf("\n\nYou have failed %d times", fail);
			reAsk:
			printf("\n\nPress '1' for Yes");
			printf("\nPress '0' for No");
			printf("\nDo you wish to continue? ");

			int choice;
			scanf("%d", &choice);

			if (choice == 0){
				goto stop;
			}else if(choice == 1){
				checker = 0;
				goto begin;
			}else{
				goto reAsk;
			}
		}
	}
	

	int num = randNum(0,2);
	printf("\n\n\n");	


	// User plays
	char guess[10];
	printf("Your turn: ");
	scanf("%s", &guess);
	// Computer plays
	printf("Computer: %s", computer[num]);
	printf("\n");
	
	
	// Game conditions ========
	if (!strcasecmp(guess, computer[num])){
		printf("\nDraw");
		goto begin;
	}else if(!strcasecmp(computer[num], "Rock") && !strcasecmp(guess, "Paper")) {
		counter++;
		printf("\nComputer: %d, Newbie: %d", fail, counter);
		goto begin;
	}else if(!strcasecmp(computer[num], "Rock") && !strcasecmp(guess, "Scissors")) {
		fail++;
		checker++;
		printf("\nComputer: %d, Newbie: %d", fail, counter);
		goto begin;
	}else if(!strcasecmp(computer[num], "Paper") && !strcasecmp(guess, "Scissors")) {
		counter++;
		printf("\nComputer: %d, Newbie: %d", fail, counter);
		goto begin;
	}else if(!strcasecmp(computer[num], "Paper") && !strcasecmp(guess, "Rock")) {
		fail++;
		checker++;
		printf("\nComputer: %d, Newbie: %d", fail, counter);
		goto begin;
	}else if(!strcasecmp(computer[num], "Scissors") && !strcasecmp(guess, "Paper")) {
		fail++;
		checker++;
		printf("\nComputer: %d, Newbie: %d", fail, counter);
		goto begin;
	}else if(!strcasecmp(computer[num], "Scissors") && !strcasecmp(guess, "Rock")) {
		counter++;
		printf("\nComputer: %d, Newbie: %d", fail, counter);
		goto begin;
	}else{
		printf("\nInvalid input!");
		goto begin;
	}
	stop:
	printf("");

}

void tablePrinter(char playField[][3]){

	printf("\n     |     |     ");
	printf("\n  %c  |  %c  |  %c  ", playField[0][0], playField[0][1], playField[0][2]);
	printf("\n-----|-----|-----");
	printf("\n  %c  |  %c  |  %c  ", playField[1][0], playField[1][1], playField[1][2]);
	printf("\n-----|-----|-----");
	printf("\n  %c  |  %c  |  %c  ", playField[2][0], playField[2][1], playField[2][2]);
	printf("\n     |     |     ");
}

void TTT(int regulator){
	// Creating multi-dimensional Arrays
	char playField[][3] = {
		{'.', '.', '.'}, 
		{'.', '.', '.'},
		{'.', '.', '.'}
	};

	char exampleArray[][3] = {
		{'1', '2', '3'}, 
		{'4', '5', '6'},
		{'7', '8', '9'}
	};

	int checker = 0, checking = 0, fail = 0, win = 0, counter = 0;

	// Game intro
	tablePrinter(exampleArray);
	printf("\n\nThe given diagram shows the nine(9) differnt available positions");
	printf("\nEach position can be access with the number it's been represented with");
	printf("\nNo position can be accessed twice");
	printf("\n\nNote: The user's choice is represented with 'O' and\n      the Computer's with 'X' ");
	printf("\n\nOnly the first to get three consecutive inputs in a straight line wins!");
	printf("\nThe user always starts first!");
	printf("\n\nLets get started...");


	if(checker < 9){

		
		char userChoice;
		userStart:
		if (regulator == 0){
			if (checker == 3){
				printf("\n\n You have played %d times", checking);
				goto end;
			}
		}else if (regulator == 1){
			if (checker == 3){
				printf("\n\nYou have played %d times", checking);
				reAsk:
				printf("\n\nPress '1' for Yes");
				printf("\nPress '0' for No");
				printf("\nDo you wish to continue? ");

				int choice;
				scanf("%d", &choice);

				if (choice == 0){
					goto end;
				}else if(choice == 1){
					checker = 0;
					goto userStart;
				}else{
					goto reAsk;
				}
			}
		}

		printf("\n\nYour turn: ");
		scanf("%c", &userChoice);

		// Checking user's input
		if(userChoice == '1' && playField[0][0] == '.'){
			playField[0][0] = 'O';
			counter++;
		}else if((userChoice == '2') && (playField[0][1] == '.')){
			playField[0][1] = 'O';
			counter++;
		}else if((userChoice == '3') && (playField[0][2] == '.')){
			playField[0][2] = 'O';
			counter++;
		}else if((userChoice == '4') && (playField[1][0] == '.')){
			playField[1][0] = 'O';
			counter++;
		}else if((userChoice == '5') && (playField[1][1] == '.')){
			playField[1][1] = 'O';
			counter++;
		}else if((userChoice == '6') && (playField[1][2] == '.')){
			playField[1][2] = 'O';
			counter++;
		}else if((userChoice == '7') && (playField[2][0] == '.')){
			playField[2][0] = 'O';
			counter++;
		}else if((userChoice == '8') && (playField[2][1] == '.')){
			playField[2][1] = 'O';
			counter++;
		}else if((userChoice == '9') && (playField[2][2] == '.')){
			playField[2][2] = 'O';
			counter++;
		}else{
			here:
			goto userStart;
		}

		// Checking for winner
		char winnerValue = '.';
		if((playField[0][0] == playField[0][1]) && (playField[0][0] == playField[0][2]) && (playField[0][0] != '.') ){
			winnerValue = playField[0][0]; goto giveAnswer;
		}else if((playField[0][0] == playField[1][0]) && (playField[0][0] == playField[2][0]) && (playField[0][0] != '.') ){
			winnerValue = playField[0][0]; goto giveAnswer;
		}else if((playField[0][0] == playField[1][1]) && (playField[0][0] == playField[2][2]) && (playField[0][0] != '.') ){
			winnerValue = playField[0][0]; goto giveAnswer;
		}else if((playField[2][2] == playField[1][2]) && (playField[2][2] == playField[0][2]) && (playField[2][2] != '.') ){
			winnerValue = playField[2][2]; goto giveAnswer;
		}else if((playField[2][2] == playField[2][1]) && (playField[2][2] == playField[2][0]) && (playField[2][2] != '.') ){
			winnerValue = playField[2][2]; goto giveAnswer;
		}else if((playField[1][1] == playField[0][2]) && (playField[1][1] == playField[2][0]) && (playField[1][1] != '.') ){
			winnerValue = playField[1][1]; goto giveAnswer;
		}else if((playField[1][1] == playField[1][0]) && (playField[1][1] == playField[1][2]) && (playField[1][1] != '.') ){
			winnerValue = playField[1][1]; goto giveAnswer;
		}else if((playField[1][1] == playField[0][1]) && (playField[1][1] == playField[2][1]) && (playField[1][1] != '.') ){
			winnerValue = playField[1][1]; goto giveAnswer;
		}


		int computerChoice;
		computerStart:
		computerChoice = randNum(1, 9);

		// Checking computers input
		if((computerChoice == 1) && (playField[0][0] == '.')){
			playField[0][0] = 'X';
			counter++;
		}else if((computerChoice == 2) && (playField[0][1] == '.')){
			playField[0][1] = 'X';
			counter++;
		}else if((computerChoice == 3) && (playField[0][2] == '.')){
			playField[0][2] = 'X';
			counter++;
		}else if((computerChoice == 4) && (playField[1][0] == '.')){
			playField[1][0] = 'X';
			counter++;
		}else if((computerChoice == 5) && (playField[1][1] == '.')){
			playField[1][1] = 'X';
			counter++;
		}else if((computerChoice == 6) && (playField[1][2] == '.')){
			playField[1][2] = 'X';
			counter++;
		}else if((computerChoice == 7) && (playField[2][0] == '.')){
			playField[2][0] = 'X';
			counter++;
		}else if((computerChoice == 8) && (playField[2][1] == '.')){
			playField[2][1] = 'X';
			counter++;
		}else if((computerChoice == 9) && (playField[2][2] == '.')){
			playField[2][2] = 'X';
			counter++;
		}else{
			goto computerStart;
		}
		
		tablePrinter(playField);

		// Checking for winner
		if((playField[0][0] == playField[0][1]) && (playField[0][0] == playField[0][2]) && (playField[0][0] != '.') ){
			winnerValue = playField[0][0];
		}else if((playField[0][0] == playField[1][0]) && (playField[0][0] == playField[2][0]) && (playField[0][0] != '.') ){
			winnerValue = playField[0][0];
		}else if((playField[0][0] == playField[1][1]) && (playField[0][0] == playField[2][2]) && (playField[0][0] != '.') ){
			winnerValue = playField[0][0];
		}else if((playField[2][2] == playField[1][2]) && (playField[2][2] == playField[0][2]) && (playField[2][2] != '.') ){
			winnerValue = playField[2][2];
		}else if((playField[2][2] == playField[2][1]) && (playField[2][2] == playField[2][0]) && (playField[2][2] != '.') ){
			winnerValue = playField[2][2];
		}else if((playField[1][1] == playField[0][2]) && (playField[1][1] == playField[2][0]) && (playField[1][1] != '.') ){
			winnerValue = playField[1][1];
		}else if((playField[1][1] == playField[1][0]) && (playField[1][1] == playField[1][2]) && (playField[1][1] != '.') ){
			winnerValue = playField[1][1];
		}else if((playField[1][1] == playField[0][1]) && (playField[1][1] == playField[2][1]) && (playField[1][1] != '.') ){
			winnerValue = playField[1][1];
		}

		giveAnswer:
		if(counter == 9 && winnerValue == '.'){
			printf("\n\nDraw");
			for (int i = 0; i < 3; i++){for (int j = 0; j < 3; j++){playField[i][j] = '.';}}
			counter = 0;
			checker++; checking++;
		}

		if(winnerValue == 'O'){
			win++;
			printf("\n\n     Computer: %d     User: %d", fail, win);
			for (int i = 0; i < 3; i++){for (int j = 0; j < 3; j++){playField[i][j] = '.';}}
			counter = 0;
			checker++; checking++;
		}else if(winnerValue == 'X'){
			fail++;
			printf("\n\n Computer: %d     User: %d", fail, win);
			for (int i = 0; i < 3; i++){for (int j = 0; j < 3; j++){playField[i][j] = '.';}}
			counter = 0;
			checker++; checking++;
		}

		goto here;

		end:
		printf("\n");
	}

}

